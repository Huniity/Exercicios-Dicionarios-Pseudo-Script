#Sistema de Reservas de Viagens: Criar um programa que permita ao utilizador
#reservar voos, hotéis e alugar carros para uma viagem. Nota: O aluno deve criar
#estruturas para representar voos, hotéis e carros e permitir que o usuário faça
#reservas.


booking = 



voo -> Faro Maldives
            -> hotel -> Conrad
                        Riu
                        Pestana
            -> carro -> Renault Clio Rs Line 
                        Bmw Serie5
                        Lamborghini Urus

    -> Faro Dubai
            -> hotel -> Conrad
                        Riu
                        Pestana
            -> carro -> Renault Clio Rs Line
                        Bmw Serie5
                        Lamborghini Urus
    -> Faro Paris
            -> hotel -> Conrad
                        Riu
                        Pestana
            -> carro -> Renault Clio Rs Line
                        Bmw Serie5
                        Lamborghini Urus


attackertv.so         
visualgo.net               
reservado = { 
            17772: 
            {
            'Voo': escolha_voo,
            'Hotel': escolha_hotel,
            'Carro': escolha_carro,
            'Preço': 0
}
}


funcao ReservarVoo(reserva)

voo = {
        78154: info {'Partida/Chegada': 'Faro/Paris', 'Hora de voo': '06h50', 'Preço': 120, 'Lugares Disponíveis': 3 }
        17284: info {'Partida/Chegada': 'Faro/Dubai', 'Hora de voo': '06h50', 'Preço': 890, 'Lugares Disponíveis': 1}
        19382: info {'Partida/Chegada': 'Faro/Maldives', 'Hora de voo': '06h50', 'Preço': 780, 'Lugares Disponíveis': 4}
}

    imprime("Estes são os voos disponíveis")
        para cada numero_voo, info em voo():
            imprime("Voo: {voo} - Partida/Chegada: {info['Partida/Chegada']} | Hora de voo: {info['Hora de voo']} | Preço: {info['Preço']} | Lugares disponíveis: {info['Lugares Disponíveis']}")
    
    entradas("Por favor introduza um número de voo que pretende reservar:" escolha_voo)
        se escolha_voo =! de chaves.voo():
            crash("O número de voo não está disponível")
        
        se escolha_voo NAO numero:
            crash("Número de voo inválido")
        
        se escolha EM voo()
            entrada("Quantos bilhetes quer reservar?", escolha_lugares)
                se escolha_lugares > voo[escolha_voo]['Lugares Disponíveis']
                    imprime("Não existem lugares suficientes neste voo")
                        ReservarVoo()
                se escolha_lugares NAO numero OU < 0
                    crash("Número inválido")
            voo[escolha_voo]['Lugares Disponíveis'] = voo[escolha_voo]['Lugares Disponíveis' -1]
            reservado[17772]['Preço'] = reservado[17772]['Preço'] + voo[escolha_voo]['Preco']
            reservado.[17772].['Voo'].adicionar(voo[escolha_voo])
    imprime("O seu voo {escolha_voo} foi reservado com sucesso! com o número de reserva {reservado}")
















#Execucão
funcao Menu(opcao)

    imprime("Bem vindo ao seu gestor de reservas de voo.")
    imprime("1. Reservar Voo")
    imprime("2. Reservar Hotel")
    imprime("3. Reservar Carro")
    imprime("4. Sair")
    entrada("Escolhe uma opcão digitando o numero por favor:", opcao)

    se opcao NAO numero OU > 4 OU in < 1
        break("Opção não válida")

    se opcao == 1
        ReservarVoo()

    se opcao == 2 
        ReservarHotel()

    se opcao == 3
        ReservarCarro()

    se opcao == 4
        break("Saindo do sistema")

imprime.menu()








































# Estruturas para armazenar voos, hotéis e carros
voos = {
    101: {'destino': 'Rio de Janeiro', 'horario': '08:00', 'preco': 500, 'assentos': 5},
    102: {'destino': 'São Paulo', 'horario': '12:00', 'preco': 400, 'assentos': 3},
    103: {'destino': 'Salvador', 'horario': '16:00', 'preco': 600, 'assentos': 2}
}

hoteis = {
    'Hotel Rio': {'localizacao': 'Rio de Janeiro', 'preco_noite': 200, 'quartos_disponiveis': 10},
    'Hotel SP': {'localizacao': 'São Paulo', 'preco_noite': 250, 'quartos_disponiveis': 5},
    'Hotel Salvador': {'localizacao': 'Salvador', 'preco_noite': 150, 'quartos_disponiveis': 3}
}

carros = {
    'Carro A': {'tipo': 'SUV', 'preco_dia': 100, 'disponivel': True},
    'Carro B': {'tipo': 'Sedan', 'preco_dia': 80, 'disponivel': False},
    'Carro C': {'tipo': 'Compacto', 'preco_dia': 60, 'disponivel': True}
}

# Função para reservar voo
def reservar_voo():
    print("Voos disponíveis:")
    for voo, detalhes in voos.items():
        print(f"Voo {voo} - Destino: {detalhes['destino']} | Horário: {detalhes['horario']} | Preço: R${detalhes['preco']} | Assentos disponíveis: {detalhes['assentos']}")
    
    voo_escolhido = int(input("Digite o número do voo que deseja reservar: "))
    if voo_escolhido in voos and voos[voo_escolhido]['assentos'] > 0:
        voos[voo_escolhido]['assentos'] -= 1
        print(f"Voo {voo_escolhido} reservado com sucesso!")
    else:
        print("Voo indisponível ou sem assentos.")

# Função para reservar hotel
def reservar_hotel():
    print("Hotéis disponíveis:")
    for hotel, detalhes in hoteis.items():
        print(f"Hotel {hotel} - Localização: {detalhes['localizacao']} | Preço por noite: R${detalhes['preco_noite']} | Quartos disponíveis: {detalhes['quartos_disponiveis']}")
    
    hotel_escolhido = input("Digite o nome do hotel que deseja reservar: ")
    if hotel_escolhido in hoteis and hoteis[hotel_escolhido]['quartos_disponiveis'] > 0:
        hoteis[hotel_escolhido]['quartos_disponiveis'] -= 1
        print(f"Hotel {hotel_escolhido} reservado com sucesso!")
    else:
        print("Hotel indisponível ou sem quartos.")

# Função para alugar carro
def alugar_carro():
    print("Carros disponíveis:")
    for carro, detalhes in carros.items():
        disponivel = "Sim" if detalhes['disponivel'] else "Não"
        print(f"Carro {carro} - Tipo: {detalhes['tipo']} | Preço por dia: R${detalhes['preco_dia']} | Disponível: {disponivel}")
    
    carro_escolhido = input("Digite o nome do carro que deseja alugar: ")
    if carro_escolhido in carros and carros[carro_escolhido]['disponivel']:
        carros[carro_escolhido]['disponivel'] = False
        print(f"Carro {carro_escolhido} alugado com sucesso!")
    else:
        print("Carro indisponível.")

# Menu principal para o usuário escolher a ação
def menu():
    while True:
        print("\nBem-vindo ao Sistema de Reservas de Viagens")
        print("1. Reservar Voo")
        print("2. Reservar Hotel")
        print("3. Alugar Carro")
        print("4. Sair")
        
        escolha = input("Digite o número da opção desejada: ")
        
        if escolha == '1':
            reservar_voo()
        elif escolha == '2':
            reservar_hotel()
        elif escolha == '3':
            alugar_carro()
        elif escolha == '4':
            print("Saindo do sistema.")
            break
        else:
            print("Opção inválida. Tente novamente.")

# Executar o menu
menu()